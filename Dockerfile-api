FROM mcr.microsoft.com/dotnet/sdk:5.0.301-alpine3.13-amd64 AS builder

# Set the working directory
WORKDIR /app

# Create directories for all project files
RUN mkdir -p ./WordFlip.Domain ./WordFlip.Infrastructure ./WordFlip.Services ./WordFlip.WebApi

# Copy the the project files
COPY ./src/WordFlip.Domain/WordFlip.Domain.csproj ./WordFlip.Domain
COPY ./src/WordFlip.Infrastructure/WordFlip.Infrastructure.csproj ./WordFlip.Infrastructure
COPY ./src/WordFlip.Services/WordFlip.Services.csproj ./WordFlip.Services
COPY ./src/WordFlip.WebApi/WordFlip.WebApi.csproj ./WordFlip.WebApi

# Restore the dependencies of the project
RUN dotnet restore ./WordFlip.WebApi/WordFlip.WebApi.csproj

# Copy the rest of the source files
COPY ./src ./

ARG APPSETTINGS=Docker

# Rename the Docker-specific API settings file to its default name
RUN mv ./WordFlip.WebApi/appsettings.${APPSETTINGS}.json ./WordFlip.WebApi/appsettings.json

# Remove app settings file not pertinent to when all services are run within a Docker container
RUN rm ./WordFlip.WebApi/appsettings.DockerHost.json
RUN rm ./WordFlip.WebApi/appsettings.Production.json

# Build and deploy the application
RUN dotnet publish ./WordFlip.WebApi/WordFlip.WebApi.csproj -c Release -p:PublishDir=publish



FROM mcr.microsoft.com/dotnet/aspnet:5.0.7-alpine3.13-amd64

RUN apk add icu-libs
ENV DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=false

WORKDIR /app
COPY --from=builder /app/WordFlip.WebApi/publish .

ENV ASPNETCORE_URLS=http://+:8080

ARG ENV=Production
ENV ASPNETCORE_ENVIRONMENT=${ENV}
EXPOSE 8080

# Start the web API service
ENTRYPOINT ["dotnet", "./WordFlip.WebApi.dll"]